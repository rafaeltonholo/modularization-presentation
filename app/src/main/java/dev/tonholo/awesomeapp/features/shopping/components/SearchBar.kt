package dev.tonholo.awesomeapp.features.shopping.componentsimport android.content.res.Configurationimport androidx.compose.foundation.text.KeyboardActionsimport androidx.compose.foundation.text.KeyboardOptionsimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.Searchimport androidx.compose.material3.Iconimport androidx.compose.material3.OutlinedTextFieldimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.runtime.getValueimport androidx.compose.runtime.mutableStateOfimport androidx.compose.runtime.saveable.rememberSaveableimport androidx.compose.runtime.setValueimport androidx.compose.ui.ExperimentalComposeUiApiimport androidx.compose.ui.Modifierimport androidx.compose.ui.platform.LocalSoftwareKeyboardControllerimport androidx.compose.ui.text.input.ImeActionimport androidx.compose.ui.tooling.preview.Previewimport dev.tonholo.awesomeapp.ui.theme.AwesomeAppTheme@OptIn(ExperimentalComposeUiApi::class)@Composablefun SearchBar(    filter: String,    onSearch: (String) -> Unit,    modifier: Modifier = Modifier,) {    var text by rememberSaveable { mutableStateOf(filter) }    val keyboardController = LocalSoftwareKeyboardController.current    OutlinedTextField(        value = text,        onValueChange = {            text = it        },        label = {            Text("Filter by")        },        leadingIcon = {            Icon(imageVector = Icons.Filled.Search, contentDescription = "Search images")        },        singleLine = true,        maxLines = 1,        keyboardOptions = KeyboardOptions(imeAction = ImeAction.Search),        keyboardActions = KeyboardActions(onSearch = {            onSearch(text)            keyboardController?.hide()        }),        modifier = modifier,    )}@Preview(    uiMode = Configuration.UI_MODE_NIGHT_NO,)@Composableprivate fun Preview() {    Preview(false)}@Preview(    uiMode = Configuration.UI_MODE_NIGHT_YES,)@Composableprivate fun DarkPreview() {    Preview(true)}@Composableprivate fun Preview(    darkMode: Boolean,) {    AwesomeAppTheme(darkTheme = darkMode) {        SearchBar(filter = "", onSearch = {})    }}